const express = require("express");
const http = require("http");
const { Server } = require("socket.io");
const cors = require("cors");
const path = require("path");

const app = express();
const server = http.createServer(app);
const io = new Server(server, {
  cors: {
    origin: "*", // ูุณูุญ ูุฃู ุฑุงุจุท ูุชุตู ุจุงูุณูุฑูุฑ
    methods: ["GET", "POST"]
  }
});

app.use(cors());

// ูู ุงููููุงุช ุงูุฃูุงููุฉ ูู public/
app.use(express.static(path.join(__dirname, "public")));

// ุฅุฑุณุงู index.html
app.get("/", (req, res) => {
  res.sendFile(path.join(__dirname, "public", "index.html"));
});

// ุบุฑู ูุฑุณุงุฆู
let rooms = {}; // ูุชุฎุฒูู ุงูุฑุณุงุฆู ูุคูุชุงู ููู ุบุฑูุฉ

io.on("connection", (socket) => {
  console.log("โ ูุณุชุฎุฏู ุฏุฎู");

  // ุฏุฎูู ุบุฑูุฉ
  socket.on("joinRoom", ({ room, username, avatar }) => {
    socket.join(room);
    if (!rooms[room]) rooms[room] = [];
    
    // ุฅุฑุณุงู ุงูุฑุณุงุฆู ุงููุฏููุฉ ูููุณุชุฎุฏู ุงูุฌุฏูุฏ
    socket.emit("messageHistory", rooms[room]);

    // ุฅุนูุงู ุงูุฌููุน ุจุงูุงูุถูุงู
    const joinMsg = {
      user: "ุงููุธุงู",
      text: `${username} ุงูุถู ุฅูู ุงูุบุฑูุฉ`,
      time: new Date().toLocaleTimeString()
    };
    io.to(room).emit("message", joinMsg);
  });

  // ุงุณุชูุจุงู ุฑุณุงูุฉ
  socket.on("chatMessage", ({ room, user, avatar, msg, time }) => {
    const message = { user, avatar, text: msg, time };
    if (!rooms[room]) rooms[room] = [];
    rooms[room].push(message);

    io.to(room).emit("message", message); // ุฅุฑุณุงู ููู ุงููุณุชุฎุฏููู ูู ุงูุบุฑูุฉ
  });

  socket.on("disconnect", () => {
    console.log("โ ูุณุชุฎุฏู ุฎุฑุฌ");
  });
});

const PORT = process.env.PORT || 3000;
server.listen(PORT, () => console.log(`๐ ุงูุณูุฑูุฑ ุดุบุงู ุนูู PORT ${PORT}`));
